name: Deploy API to AWS EC2

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  AWS_REGION: "us-east-1"

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Check out code
    - name: Check out code
      uses: actions/checkout@v3

    # Step 2: Set up Python
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"

    # Step 3: Install dependencies
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r app/requirements.txt  # Requirements file in app folder

    # Step 4: Start API with Uvicorn and run tests
    - name: Run API locally and test
      run: |
        # Start API using Uvicorn in the background
        uvicorn app.api:app --host 127.0.0.1 --port 8000 --reload &
        API_PID=$!

        # Wait for API to start
        sleep 5

        # Run tests
        BASE_URL=http://127.0.0.1:8000 pytest tests/test_api.py

        # Stop the API
        kill $API_PID

    # Step 5: Build Docker Image
    - name: Build Docker image
      run: |
        docker build -t adrylr/p7_scoring_app:latest .

    # Step 6: Log in to Docker Hub
    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    # Step 7: Push Docker image to Docker Hub
    - name: Push Docker image to Docker Hub
      run: |
        docker push adrylr/p7_scoring_app:latest

    # Step 8: Configure AWS credentials
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1.7.0
      with:
        role-to-assume: ${{ secrets.AWS_ARN }}
        role-session-name: GitHub_to_AWS_via_FederatedOIDC
        aws-region: ${{ env.AWS_REGION }}

    # Step 9: Deploy to EC2
    - name: Deploy to EC2
      uses: appleboy/ssh-action@v0.1.7
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_SSH_KEY }}
        port: 22
        script: |
          # Install Docker and start the service
          sudo yum update -y
          sudo yum install -y docker
          sudo usermod -aG docker ec2-user
          sudo service docker start

          # Log in to Docker Hub and pull the latest image
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker pull adrylr/p7_scoring_app:latest

          # Stop and remove any existing containers using the same image
          docker ps -q --filter "ancestor=adrylr/p7_scoring_app:latest" | xargs -r docker stop
          docker ps -q --filter "ancestor=adrylr/p7_scoring_app:latest" | xargs -r docker rm

          # Run the Docker container
          docker run -d -p 80:8000 adrylr/p7_scoring_app:latest
