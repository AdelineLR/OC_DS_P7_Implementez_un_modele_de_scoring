name: Deploy API to AWS EC2

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  AWS_REGION: "us-east-1"

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Check out code
    - name: Check out code
      uses: actions/checkout@v3

    # Step 2: Build Docker Image
    - name: Build Docker image
      run: |
        docker build -t my_api_image:latest .

    # Step 3: Run API container and execute tests
    - name: Run tests inside Docker container
      run: |
        # Start container for tests
        docker run -d -p 8000:8000 --name test_api_container my_api_image:latest
        
        # Wait until API starts
        sleep 10

        # Run test with local host
        docker exec test_api_container pytest tests/test_api.py

        # Stop and delete container after tests
        docker stop test_api_container && docker rm test_api_container

    # Step 4: Configure AWS credentials
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1.7.0
      with:
        role-to-assume: ${{ secrets.AWS_ARN }}
        role-session-name: GitHub_to_AWS_via_FederatedOIDC
        aws-region: ${{ env.AWS_REGION }}

    # Step 5: Deploy to EC2
    - name: Deploy to EC2
      uses: appleboy/ssh-action@v0.1.7
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_SSH_KEY }}
        port: 22
        script: |
          # Installer Docker et démarrer le service
          sudo yum update -y
          sudo yum install -y docker
          sudo usermod -aG docker ec2-user
          sudo service docker start

          # Récupérer et démarrer le conteneur
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker pull my_api_image:latest
          docker run -d -p 80:8000 my_api_image:latest
